help.start()
library(limma)
library(limma)
source("http://www.bioconductor.org/biocLite.R")
biocLite("limma")
biocLite("statmod")
x<-2
objects9
objects()
show(x)
library("limma")
targets <- readTargets("targets.txt")
library(limma)
> targets <- readTargets("targets.txt")
library(limma)
targets <- readTargets("targets.txt")
library(limma)
targets = readTargets()
biocLite("limma")
library(limma)
targets <- readTargets("targets.txt")
install.packages("affy")
source("http://bioconductor.org/biocLite.R")
biocLite()
library(limma)
library(limma)
targets<-readTargets("targets.txt")
spottypes <- readSpotTypes()
load("C:/Users/Ewa/Dropbox/Things/Hons Proj 2 - MM vs LL 18/Script.R")
source("http://www.bioconductor.org/biocLite.R")
source('C:/Users/Ewa/Dropbox/Things/Hons Proj 2 - MM vs LL 18/Script.R', echo=TRUE)
data <-read.delim("Experiments.txt") #read the Experiments data file
expdata <-read.maimages(data["FileName"], source = "agilent", green.only=T) # define data as in agilent format which only has one channel, in this case green
#normalisation
cdata <-backgroundCorrect(expdata, "normexp", offset=50) #background correction using the normexp way
cdata <- normalizeBetweenArrays(cdata, method="quantile")
cdata <-log(cdata$E)
#saving data
cdata.m<-cdata
write.table(cdata.m, "savednumbers.txt" , sep="\t", row.names = T, col.names = T, quote = F )
boxplot(data.frame(cdata.m)) #converting object into a data frame and then drawing a boxplot
#filtering
source("http://bioconductor.org/biocLite.R")
biocLite("genefilter")
library(genefilter)
sddata<-rowSds(cdata.m)
i<-sddata >= 2
sddata.f <-cdata.m[i,]
cutoff <-pOverA(A=1, p=0.5)
i<-genefilter(cdata.m,cutoff)
cudata.u<-cdata.m[i,]
cutoff <-pOverA(A=1, p=0.5)
i<-genefilter(-cdata.m,cutoff)
cudata.l<-cdata.m[i,]
done <-rbind(cudata.u,cudata.l)
citation()
citation()
essionInfo()
packageVersion("snow")
packageVersion("limma")
sessionInfo()
library ("edgeR")
library ("edgeR")
packageVersion("edgeR")
library (gplots)
setwd("C:/Users/Ewa/Desktop/Project Data/Volcano plot")
rna <- read.table("RNAseqTopTable-Paired.txt", header = T)
miroarray <- read.table("microarrayTopTable.txt", header = T)
install.packages("ggplot2")
head(microarray)
microarray <- read.table("microarrayTopTable.txt", header = T)
head(microarray)
lenght(microarray$logFC)
lenhgt(microarray$logFC)
lenth(microarray$logFC)
lenght(microarray$logFC)
length(microarray$logFC)
microarray$threshold <- as.factor(abs(microarray$logFC) > 1 & microarray$P.Value < 0.05/9472)
length(rna$logFC)
rna$$threshold <- as.factor(abs(microarray$logFC) > 1 & microarray$P.Value < 0.05/5496)
rna$threshold <- as.factor(abs(microarray$logFC) > 1 & microarray$P.Value < 0.05/5496)
rna$threshold <- as.factor(abs(rna$logFC) > 1 & microarray$P.Value < 0.05/5496)
library (ggplot2)
microarray <- read.table("microarrayTopTable.txt", header = T)
rna <- read.table("RNAseqTopTable-Paired.txt", header = T)
microarray$threshold <- as.factor(abs(microarray$logFC) > 1 & microarray$P.Value < 0.05/9472)
rna$threshold <- as.factor(abs(rna$logFC) > 1 & rna$P.Value < 0.05/5496)
g = ggplot(data=microarray, aes(x=logFC, y=-log10(P.Value), colour=threshold)) +
geom_point(alpha=0.4, size=1.75) +
opts(legend.position = "none") +
xlim(c(-10, 10)) + ylim(c(0, 15)) +
xlab("log2 fold change") + ylab("-log10 p-value")
library (ggplot2)
ggplot(data=microarray aes(x=logFC, y=-log10(P.Value), colour=threshold)) +
ggplot(data=microarray(x=logFC, y=-log10(P.Value), colour=threshold)) +
geom_point(alpha=0.4, size=1.75) +
opts(legend.position = "none") +
xlim(c(-10, 10)) + ylim(c(0, 15)) +
xlab("log2 fold change") + ylab("-log10 p-value")
plot(data=microarray(x=logFC, y=-log10(P.Value), colour=threshold)) +
geom_point(alpha=0.4, size=1.75) +
opts(legend.position = "none") +
xlim(c(-10, 10)) + ylim(c(0, 15)) +
xlab("log2 fold change") + ylab("-log10 p-value")
plot(microarray(x=logFC, y=-log10(P.Value), colour=threshold)) +
geom_point(alpha=0.4, size=1.75) +
opts(legend.position = "none") +
xlim(c(-10, 10)) + ylim(c(0, 15)) +
xlab("log2 fold change") + ylab("-log10 p-value")
plot(microarray$logFC, microarray$log10(P.Value), colour=threshold)) +
plot(microarray$logFC, microarray$(log10(P.Value)), colour=threshold)) +
plot(microarray$logFC, log(microarray$P.Value, colour=threshold)
)
plot(microarray$logFC, log(microarray$P.Value, colour=microarray$threshold)
)
plot(microarray$logFC, log(microarray$P.Value)
)
g = ggplot(data=microarray, aes(x=logFC, y=-log10(P.Value), colour=threshold))
?ggplot
library (ggplot2)
microarray <- read.table("microarrayTopTable.txt", header = T)
install.packages("ggplot2")
library (ggplot2)
?ggplot
g = ggplot(data=microarray, aes(x=logFC, y=-log10(P.Value), colour=threshold))
microarray$threshold <- as.factor(abs(microarray$logFC) > 1 & microarray$P.Value < 0.05/9472)
g = ggplot(data=microarray, aes(x=logFC, y=-log10(P.Value), colour=threshold))
g
g
microarray <- read.table("microarrayTopTable.txt", header = T)
rna <- read.table("RNAseqTopTable-Paired.txt", header = T)
microarray$threshold <- as.factor(abs(microarray$logFC) > 1 & microarray$P.Value < 0.05/9472)
g = ggplot(data=microarray, aes(x=logFC, y=-log10(P.Value), colour=threshold)
geom_point(alpha=0.4, size=1.75) +
g = ggplot(data=microarray, aes(x=logFC, y=-log10(P.Value), colour=threshold),
geom_point(alpha=0.4, size=1.75) +
opts(legend.position = "none") +
xlim(c(-10, 10)) + ylim(c(0, 15)) +
xlab("log2 fold change") + ylab("-log10 p-value"))
g
a <- ggplot(data=microarray, aes(x=logFC, y=-log10(P.Value), colour=threshold))
b <- a + geom_point(alpha=0.4, size=1.75)
b
a <- ggplot(data=microarray, aes(x=logFC, y=-log10(P.Value), colour=threshold))
b <- a + geom_point(alpha=0.4, size=1.75)
c <- opts(legend.position = "none")
c <- theme(legend.position = "none")
d <- xlim(c(-10, 10)) + ylim(c(0, 15))
a <- ggplot(data=microarray, aes(x=logFC, y=-log10(P.Value), colour=threshold))
b <- a + geom_point(alpha=0.4, size=1.75)
c <- b + theme(legend.position = "none")
d <- c + xlim(c(-10, 10)) + ylim(c(0, 15))
e <- d + xlab("log2 fold change") + ylab("-log10 p-value"))
e
d <- c + xlim(c(-10, 10)) + ylim(c(0, 15))
e <- d + xlab("log2 fold change") + ylab("-log10 p-value"))
e <- d + xlab("log2 fold change") + ylab("-log10 p-value")
e
e <- d + xlab("log2 fold change") + ylab("-log10 p-value")
a <- ggplot(data=microarray, aes(x=logFC, y=-log10(P.Value), colour=threshold))
b <- a + geom_point(alpha=0.4, size=1.75)
c <- b + theme(legend.position = "none")
d <- c + xlim(c(-10, 10)) + ylim(c(0, 15))
e <- d + xlab("log2 fold change") + ylab("-log10 p-value")
e
e <- d + xlab("log2 fold change") + ylab("-log10 p-value") + main = "Microarray Volcano Plot"
g = 2
g
e <- d + xlab("log2 fold change") + ylab("-log10 p-value") + main = ("Microarray Volcano Plot")
f <- e + + main = ("Microarray Volcano Plot")
f <- e + + main = ("Microarray Volcano Plot")
f <- e + + main = ("Microarray Volcano Plot")
f <- e + main = ("Microarray Volcano Plot")
e <- d + xlab("log2 fold change") + ylab("-log10 p-value") + ggtitle =("lolz")
e <- d + xlab("log2 fold change") + ylab("-log10 p-value") + ggtitle = ("lolz")
e <- d + xlab("log2 fold change") + ylab("-log10 p-value")
e
a <- ggplot(data=rna, aes(x=logFC, y=-log10(P.Value), colour=threshold))
b <- a + geom_point(alpha=0.4, size=1.75)
c <- b + theme(legend.position = "none")
d <- c + xlim(c(-10, 10)) + ylim(c(0, 15))
e <- d + xlab("log2 fold change") + ylab("-log10 p-value")
e
microarray$threshold <- as.factor(abs(microarray$logFC) > 1 & microarray$P.Value < 0.05/9472)
rna$threshold <- as.factor(abs(rna$logFC) > 1 & rna$P.Value < 0.05/5496)
a <- ggplot(data=rna, aes(x=logFC, y=-log10(P.Value), colour=threshold))
b <- a + geom_point(alpha=0.4, size=1.75)
c <- b + theme(legend.position = "none")
d <- c + xlim(c(-10, 10)) + ylim(c(0, 15))
e <- d + xlab("log2 fold change") + ylab("-log10 p-value")
e
b
cat("\014")
plot((log(rawPaired$RNASeq18LL.3P))~((log(rawNOTPaired$RNASeq18LL.1.uP.2))), main = "Paired vs Unpaired Data - Sample 18LL-3",xlab= "Paired (log10 Counts)", ylab = "Unpaired (log10Counts)")
rawPaired <- read.table("pairedEndsCountData.txt", header = T)
microarray <- read.delim("microarrayTopTable.txt", header = T)
rna <- read.delim("RNAseqTopTable-Paired.txt", header = T)
blast <- read.delim("final_blast_Table.txt", header=T)
setwd("C:/Users/Ewa/Desktop/Project Data/3.Microarray_Vs_RNASeq/3.table merge")
microarray <- read.delim("microarrayTopTable.txt", header = T)
microarray <- read.delim("microarrayTopTable.txt", header = T)
rna <- read.delim("RNAseqTopTable-Paired.txt", header = T)
blast <- read.delim("final_blast_Table.txt", header=T)
microTable<- merge(blast, microarray, by.x ="query.name", by.y = "ProbeName")
microTableSmall<- microTable[,c("query.name", "subject","logFC")]
microRnaTable <- merge(microTableSmall, rna, by.x= "subject", by.y ="Gene" )
plot(microRnaTable$logFC.y~microRnaTable$logFC.x, main = "Microarray VS RNA-Seq logFC", xlab = "RNA-Seq logFC", ylab = "Microarray logFC"
)
abline(lm(microRnaTable$logFC.x~microRnaTable$logFC.y),col = "red", lwd=2)
summary(lm(microRnaTable$logFC.x~microRnaTable$logFC.y))
hist(residuals(lm(microRnaTable$logFC.x~microRnaTable$logFC.y)),breaks=30)
plot(lm(microRnaTable$logFC.x~microRnaTable$logFC.y))
hist(residuals(lm(microRnaTable$logFC.x~microRnaTable$logFC.y)),breaks=30)
plot(microRnaTable$logFC.y~microRnaTable$logFC.x, main = "Microarray VS RNA-Seq logFC", xlab = "RNA-Seq logFC", ylab = "Microarray logFC")
plot(microRnaTable$logFC.y~microRnaTable$logFC.x, main = "Microarray VS RNA-Seq logFC", xlab = "RNA-Seq logFC", ylab = "Microarray logFC",pch=20, col=c(4,'skyblue','darkblue'))
abline(lm(microRnaTable$logFC.x~microRnaTable$logFC.y),col = "red", lwd=2)
